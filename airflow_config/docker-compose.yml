version: '3.7'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    networks:
      - airflow_network

  redis:
    image: redis:6
    networks:
      - airflow_network

  airflow-webserver:
    image: apache/airflow:2.9.1
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__BROKER_URL: redis://redis:6379/0  # 내부 Redis 컨테이너 연결
      AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX: "True"
    volumes:
      - ./dags:/opt/airflow/dags
    ports:
      - "8082:8080"
    command: webserver
    networks:
      - airflow_network

  airflow-scheduler:
    image: apache/airflow:2.9.1
    restart: always
    depends_on:
      - airflow-webserver
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__BROKER_URL: redis://redis:6379/0  # 내부 Redis 컨테이너 연결
    volumes:
      - ./dags:/opt/airflow/dags
    command: scheduler
    networks:
      - airflow_network

  airflow-flower:
    image: apache/airflow:2.9.1
    depends_on:
      - airflow-webserver
      - airflow-scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    ports:
      - "5555:5555"
    command: flower
    networks:
      - airflow_network

volumes:
  postgres-db-volume:

networks:
  data-pipeline-net:
    driver: bridge
